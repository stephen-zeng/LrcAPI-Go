name: Build

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.2'

      - name: Build binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          mkdir -p build
          ext=""
          if [ "${GOOS}" = "windows" ]; then
            ext=".exe"
          fi
          CGO_ENABLED=0 GOOS=${GOOS} GOARCH=${GOARCH} go build -o build/lrcAPI-${GOOS}-${GOARCH}${ext} .

      - name: Upload binaries
        uses: actions/upload-artifact@v4
        with:
          name: lrcAPI-binaries-${{ matrix.goos }}-${{ matrix.goarch }}
          path: build/
        
  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Display downloaded files
        run: ls -R dist

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
